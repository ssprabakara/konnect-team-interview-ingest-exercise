version: '3.8'

services:
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    networks:
      - konnect-observability-net
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: always
    networks:
      - konnect-observability-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "9092:9092"
    networks:
      - konnect-observability-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'false'
      KAFKA_ADVERTISED_HOST_NAME: 'kafka'
      KAFKA_MESSAGE_MAX_BYTES: '200000000'

  init-kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: init-kafka
    depends_on:
      - kafka
    networks:
      - konnect-observability-net
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic cdc-events --replication-factor 1 --partitions 1
      "

  kafka-connect-distributed:
    image: apache/kafka:3.7.0
    #container_name: connect-distributed
    ports:
      - "8083-8085:8083"
    command:
      - bash
      - -c
      - /opt/kafka/bin/connect-distributed.sh /opt/kafka/config/connect-distributed.properties
    deploy:
      replicas: 2
    networks:
      - konnect-observability-net
    restart: always
    depends_on:
      - init-kafka
    volumes:
      - "./properties/connect-distributed.properties:/opt/kafka/config/connect-distributed.properties"
      - "./plugins/opensearch-connector:/opt/kafka/plugins/opensearch-connector"
      - "./plugins/filepulse-connector:/opt/kafka/plugins/filepulse-connector"
      - "./input:/tmp/kafka-connect/input"

  opensearch-node:
    image: opensearchproject/opensearch:2.18.0
    container_name: opensearch-node
    networks:
      - konnect-observability-net
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.seed_hosts=opensearch-node
      - cluster.initial_cluster_manager_nodes=opensearch-node
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: always
    volumes:
      - opensearch-node-data:/usr/share/opensearch/data
    ports:
      - "9200:9200" # REST API
      - "9600:9600" # Performance Analyzer

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.18.0
    container_name: opensearch-dashboards
    networks:
      - konnect-observability-net
    ports:
      - "5601:5601"
    expose:
      - "5601"
    restart: always
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"

volumes:
  opensearch-node-data:
    driver: local
    name: opensearch-node-data

networks:
  konnect-observability-net:
    name: konnect-observability-net
